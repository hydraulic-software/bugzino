/*
 * This file is generated by jOOQ.
 */
package dev.hydraulic.bugzino.frontend.db.keys


import dev.hydraulic.bugzino.frontend.db.tables.TPendingUserRegistrations
import dev.hydraulic.bugzino.frontend.db.tables.TTicket
import dev.hydraulic.bugzino.frontend.db.tables.TUsers
import dev.hydraulic.bugzino.frontend.db.tables.records.TPendingUserRegistrationsRecord
import dev.hydraulic.bugzino.frontend.db.tables.records.TTicketRecord
import dev.hydraulic.bugzino.frontend.db.tables.records.TUsersRecord

import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val T_PENDING_USER_REGISTRATIONS_PKEY: UniqueKey<TPendingUserRegistrationsRecord> = Internal.createUniqueKey(TPendingUserRegistrations.T_PENDING_USER_REGISTRATIONS, DSL.name("t_pending_user_registrations_pkey"), arrayOf(TPendingUserRegistrations.T_PENDING_USER_REGISTRATIONS.EMAIL), true)
val T_TICKET_PKEY: UniqueKey<TTicketRecord> = Internal.createUniqueKey(TTicket.T_TICKET, DSL.name("t_ticket_pkey"), arrayOf(TTicket.T_TICKET.ID), true)
val T_USERS_PKEY: UniqueKey<TUsersRecord> = Internal.createUniqueKey(TUsers.T_USERS, DSL.name("t_users_pkey"), arrayOf(TUsers.T_USERS.EMAIL), true)
