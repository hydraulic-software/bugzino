/*
 * This file is generated by jOOQ.
 */
package dev.hydraulic.bugzino.frontend.db.routines.references


import dev.hydraulic.bugzino.frontend.db.routines.AddTicket
import dev.hydraulic.bugzino.frontend.db.routines.CompleteUserRegistration
import dev.hydraulic.bugzino.frontend.db.routines.EditTicket
import dev.hydraulic.bugzino.frontend.db.routines.StartUserRegistration

import org.jooq.Configuration
import org.jooq.Field



/**
 * Call <code>public.add_ticket</code>
 */
fun addTicket(
      configuration: Configuration
    , title: String?
    , description: String?
): Unit {
    val p = AddTicket()
    p.setTitle(title)
    p.setDescription(description)

    p.execute(configuration)
}

/**
 * Call <code>public.complete_user_registration</code>
 */
fun completeUserRegistration(
      configuration: Configuration
    , emailaddress: String?
    , usersubmittedcode: String?
): String? {
    val f = CompleteUserRegistration()
    f.setEmailaddress(emailaddress)
    f.setUsersubmittedcode(usersubmittedcode)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.complete_user_registration</code> as a field.
 */
fun completeUserRegistration(
      emailaddress: String?
    , usersubmittedcode: String?
): Field<String?> {
    val f = CompleteUserRegistration()
    f.setEmailaddress(emailaddress)
    f.setUsersubmittedcode(usersubmittedcode)

    return f.asField()
}

/**
 * Get <code>public.complete_user_registration</code> as a field.
 */
fun completeUserRegistration(
      emailaddress: Field<String?>
    , usersubmittedcode: Field<String?>
): Field<String?> {
    val f = CompleteUserRegistration()
    f.setEmailaddress(emailaddress)
    f.setUsersubmittedcode(usersubmittedcode)

    return f.asField()
}

/**
 * Call <code>public.edit_ticket</code>
 */
fun editTicket(
      configuration: Configuration
    , id: Int?
    , title: String?
    , description: String?
    , assignee: String?
): Unit {
    val p = EditTicket()
    p.setId(id)
    p.setTitle(title)
    p.setDescription(description)
    p.setAssignee(assignee)

    p.execute(configuration)
}

/**
 * Call <code>public.start_user_registration</code>
 */
fun startUserRegistration(
      configuration: Configuration
    , name: String?
    , emailaddress: String?
    , desiredpassword: String?
): Boolean? {
    val f = StartUserRegistration()
    f.setName_(name)
    f.setEmailaddress(emailaddress)
    f.setDesiredpassword(desiredpassword)

    f.execute(configuration)
    return f.returnValue
}

/**
 * Get <code>public.start_user_registration</code> as a field.
 */
fun startUserRegistration(
      name: String?
    , emailaddress: String?
    , desiredpassword: String?
): Field<Boolean?> {
    val f = StartUserRegistration()
    f.setName_(name)
    f.setEmailaddress(emailaddress)
    f.setDesiredpassword(desiredpassword)

    return f.asField()
}

/**
 * Get <code>public.start_user_registration</code> as a field.
 */
fun startUserRegistration(
      name: Field<String?>
    , emailaddress: Field<String?>
    , desiredpassword: Field<String?>
): Field<Boolean?> {
    val f = StartUserRegistration()
    f.setName_(name)
    f.setEmailaddress(emailaddress)
    f.setDesiredpassword(desiredpassword)

    return f.asField()
}
